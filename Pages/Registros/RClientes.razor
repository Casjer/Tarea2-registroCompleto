@page "/Clientes"
@using RegistroCliente.BLL;
@using RegistroCliente.Models;
@inject ClientesBLL ClientesBLL;

<div class="container text-center">
    <EditForm Model="clientes" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <head>
            <h3> Registro de Cliente</h3>
            <br />
        </head>

        <body>
            <div class="form-group">
                <div class="form-inline">
                    <label for="PersonaId" class="col-4">Codigo del cliente:</label>
                    <InputNumber @bind-Value="clientes.ClienteId" class="form-control col-3" />
                    <button type="button" class="btn btn-outline-dark" @onclick="Buscar" style="margin: 5px">Buscar</button>
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Nombre" class="col-4">Nombre:</label>
                    <InputText @bind-Value="clientes.Nombre" class="form-control col-4" />
                    <ValidationMessage For="@(() => clientes.Nombre)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Telefono:</label>
                    <InputText @bind-Value="clientes.Telefono" class="form-control col-4" />
                    <ValidationMessage For="@(() => clientes.Telefono)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Cedula" class="col-4">Cedula:</label>
                    <InputText @bind-Value="clientes.Cedula" class="form-control col-4" />
                    <ValidationMessage For="@(() => clientes.Cedula)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Direccion:</label>
                    <InputText @bind-Value="clientes.Direccion" class="form-control col-4" />
                    <ValidationMessage For="@(() => clientes.Direccion)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Direccion:</label>
                    <InputDate @bind-Value="clientes.FechaNacimiento" class="form-control col-4" />
                    <ValidationMessage For="@(() => clientes.FechaNacimiento)" />
                </div>
            </div>

            <h3>@Mensaje</h3>

            <div>
                <button type="button" class="btn btn-outline-primary" @onclick="Limpiar" style="margin: 5px">Limpiar</button>
                <button type="submit" class="btn btn-outline-success" style="margin: 5px">Guardar</button>
                <button type="button" class="btn btn-outline-danger" @onclick="Eliminar" style="margin: 5px">Eliminar</button>
            </div>

        </body>

    </EditForm>
</div>



@code {
    Clientes clientes = new Clientes();
    string Mensaje = string.Empty;

    private void Guardar()
    {

        Clientes clientesBLL = new Clientes();

        try
        {
            if (ClientesBLL.Insertar(clientes))
            {

                Mensaje = "el cliente se guardo de manera exitosa!...";
            }
            else
            {

                Mensaje = "el cliente no se guardo de manera exitosa!...";
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Buscar()
    {

        Clientes clientesBLL = new Clientes();

        try
        {
            Clientes Temporal = new Clientes();
            Temporal = ClientesBLL.Buscar(clientes.ClienteId);

            if (Temporal != null)
            {
                clientes = Temporal;
                Mensaje = "Cliente encontrada de manera exitosa!...";
            }
            else
            {

                Mensaje = "el cliente no pudo ser encontrada!...";
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Eliminar()
    {

        Clientes clientes = new Clientes();

        try
        {
            Clientes Temporal = new Clientes();
            Temporal = ClientesBLL.Buscar(clientes.ClienteId);

            if (Temporal == null)
            {

                Mensaje = "No se puede eliminar un Cliente que no existe!...";
            }
            else
            {

                if (ClientesBLL.Eliminar(clientes.ClienteId))
                {
                    Mensaje = " fue eliminada de manera exitosa";
                    Limpiar();
                }
                else
                {

                    Mensaje = "el cliente no pudo ser eliminada de manera exitosa";
                }
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Limpiar()
    {

        clientes = new Clientes();
        Mensaje = string.Empty;
    }
}
